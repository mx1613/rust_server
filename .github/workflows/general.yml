name: ðŸ¦€Rust

on:
  push:
    branches:
      - main
      - develop
      - feat/*
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main
      - develop
      - feat/*

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.1
  SQLX_FEATURES: "rustls,postgres"

# A workflow run is made up of one or more jobs, which run in parallel by default
# Each job runs in a runner environment specified by runs-on
jobs:
  test:
    name: ðŸ§ªTest
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres

        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Install postgresql-client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Migrate database
        run: chmod +x ./scripts/init_db.sh && SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run tests
        run: cargo test
      
      - name: Generate code coverage
        run: cargo install cargo-tarpaulin && cargo tarpaulin --verbose --workspace

  fmt:
    name: âœ…Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Enforce formatting
        run: cargo fmt --check

      - name: Enforce linting
        run:  cargo clippy -- -D warnings

